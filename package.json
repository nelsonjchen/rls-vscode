{
    "name": "rust",
    "displayName": "Rust (rls)",
    "description": "Rust language support - code completion, Intellisense, refactoring, reformatting, errors, snippets. A client for the Rust Language Server, built by the RLS team.",
    "version": "0.2.1",
    "publisher": "rust-lang",
    "icon": "rust-icon.png",
    "galleryBanner": {
        "color": "#336356",
        "theme": "dark"
    },
    "engines": {
        "vscode": "^1.14.0"
    },
    "license": "(MIT OR Apache-2.0)",
    "repository": {
        "type": "git",
        "url": "https://github.com/rust-lang-nursery/rls-vscode"
    },
    "bugs": {
        "url": "https://github.com/rust-lang-nursery/rls-vscode/issues"
    },
    "categories": [
        "Languages",
        "Linters",
        "Snippets",
        "Formatters",
        "Other"
    ],
    "keywords": [
        "rust",
        "rust-lang",
        "rls"
    ],
    "preview": true,
    "activationEvents": [
        "onLanguage:rust"
    ],
    "main": "./out/src/extension",
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install"
    },
    "dependencies": {
        "vscode-languageclient": "^3.3.0"
    },
    "devDependencies": {
        "typescript": "^2.4.1",
        "vscode": "^1.1.0",
        "mocha": "^2.3.3",
        "@types/mocha": "^2.2.32",
        "@types/node": "^6.0.40"
    },
    "contributes": {
        "languages": [
            {
                "id": "rust",
                "extensions": [
                    ".rs"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "snippets": [
            {
                "language": "rust",
                "path": "./snippets/rust.json"
            }
        ],
        "commands": [
            {
                "command": "rls.deglob",
                "title": "Deglob imports",
                "category": "Rust"
            },
            {
                "command": "rls.findImpls",
                "title": "Find Implementations",
                "description": "Show impl blocks for trait, struct, or enum",
                "category": "Rust"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command": "rls.findImpls",
                    "when": "editorLangId == rust && editorHasReferenceProvider",
                    "group": "navigation@4"
                }
            ]
        },
        "configuration": {
            "type": "object",
            "title": "Rust configuration",
            "properties": {
                "rust-client.showStdOut": {
                    "type": "boolean",
                    "default": false,
                    "description": "Specifies whether RLS stdout will be shown in the output channel along with protocol logs. Requires reloading extension after change."
                },
                "rust-client.showStdErr": {
                    "type": "boolean",
                    "default": false,
                    "description": "Specifies whether RLS stderr will be shown in the output channel along with protocol logs. Requires reloading extension after change."
                },
                "rust-client.logToFile": {
                    "type": "boolean",
                    "default": false,
                    "description": "When set to true, RLS stderr is logged to a file at workspace root level. Requires reloading extension after change."
                },
                "rust-client.revealOutputChannelOn": {
                    "type": "string",
                    "enum": [
                        "info",
                        "warn",
                        "error",
                        "never"
                    ],
                    "default": "never",
                    "description": "Specifies message severity on which the output channel will be revealed. Requires reloading extension after change."
                },
                "rust.sysroot": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "default": null,
                    "description": "--sysroot"
                },
                "rust.target": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "default": null,
                    "description": "--target"
                },
                "rust.rustflags": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "default": null,
                    "description": "Flags added to RUSTFLAGS."
                },
                "rust.clear_env_rust_log": {
                    "type": "boolean",
                    "default": true,
                    "description": "Clear the RUST_LOG environment variable before running rustc or cargo."
                },
                "rust.build_lib": {
                    "type": [
                        "boolean",
                        "null"
                    ],
                    "default": null,
                    "description": "Specify to run analysis as if running `cargo check --lib`. Use `null` to auto-detect."
                },
                "rust.build_bin": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "default": null,
                    "description": "Specify to run analysis as if running `cargo check --bin <name>`. Use `null` to auto-detect."
                },
                "rust.cfg_test": {
                    "type": "boolean",
                    "default": false,
                    "description": "Build cfg(test) code."
                },
                "rust.unstable_features": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable unstable features."
                },
                "rust.wait_to_build": {
                    "type": "number",
                    "default": 500,
                    "description": "Time in milliseconds between receiving a change notification and starting build."
                },
                "rust.show_warnings": {
                    "type": "boolean",
                    "default": true,
                    "description": "Show warnings."
                },
                "rust.goto_def_racer_fallback": {
                    "type": "boolean",
                    "default": false,
                    "description": "Use racer as a fallback for goto def."
                },
                "rust.use_crate_blacklist": {
                    "type": "boolean",
                    "default": true,
                    "description": "Don't index crates on the crate blacklist."
                },
                "rust.build_on_save": {
                    "type": "boolean",
                    "default": false,
                    "description": "Only index the project when a file is saved and not on change."
                },
                "rust.workspace_mode": {
                    "type": "boolean",
                    "default": false,
                    "description": "EXPERIMENTAL: Enable workspace support and analyze every package in it."
                },
                "rust.analyze_package": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "default": null,
                    "description": "if `rust.workspace_mode` is enabled, only the specified package in the workspace will be analyzed."
                }
            }
        }
    }
}
